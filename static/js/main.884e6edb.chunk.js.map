{"version":3,"sources":["MyPopup/TaxDeductionContent/EarlyPayment/EarlyPayment/EarlyPayment.jsx","MyPopup/TaxDeductionContent/EarlyPayment/EarlyPayments.jsx","MyPopup/TaxDeductionContent/TaxDeductionContent.jsx","MyPopup/TaxDeductionPopup.jsx","App.js","reportWebVitals.js","index.js"],"names":["EarlyPayment","props","useState","active","setActive","className","htmlFor","year","id","checked","onChange","e","currentTarget","type","ceil","toString","length","lastDigit","Number","getYearText","EarlyPayments","earlyPayments","map","value","index","TaxDeductionContent","maxDeductionAmount","withError","setError","setEarlyPayments","salary","setSalary","hiddenBlockRef","useRef","currencySign","salaryInput","onClick","closePopup","ref","mas","replace","split","reverse","elem","join","validate","current","style","display","hiddenElem","innerHTML","leftPosition","getBoundingClientRect","width","salaryInputWidth","left","placeholder","salaryInt","maxDeductionAmountTemp","maxInYear","payments","push","Math","round","TaxDeductionPopup","isOpen","apartmentPrice","toFixed","isOpenPopup","App","setOpenPopup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.884e6edb.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './EarlyPayment.scss';\r\n\r\nfunction EarlyPayment(props) {\r\n    const [active, setActive] = useState(true);\r\n\r\n    function getYearText(year) {\r\n\r\n        //получаем вторую цифру с конца\r\n        //12 ый, 113 ый ... и т.д.\r\n        const twoDigig = year.toString()[year.toString().length-2];\r\n        if(twoDigig==='1'){\r\n            return `в ${year}-ый год`;\r\n        }\r\n\r\n        //получаем последнюю цифру\r\n        let lastDigit = year.toString()[year.toString().length-1];\r\n\r\n        switch(Number(lastDigit)) {\r\n            case 1:\r\n                return `в ${year}-ый год`;\r\n            case 2: {\r\n                if(year<10) return `во ${year}-ой год`;\r\n                else return `в ${year}-ой год`;\r\n            }\r\n            case 3:\r\n                return `в ${year}-ий год`;\r\n            case 4:\r\n                return `в ${year}-ый год`;\r\n            case 5:\r\n                return `в ${year}-ый год`;\r\n            case 6:\r\n                return `в ${year}-ой год`;\r\n            case 7:\r\n                return `в ${year}-ой год`;\r\n            case 8:\r\n                return `в ${year}-ой год`;\r\n            case 9:\r\n                return `в ${year}-ый год`;\r\n            case 0:\r\n                return `в ${year}-ый год`;\r\n            default: return 'error';\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='early-payment__item'>\r\n            <label htmlFor={'early-payment-input-'+props.year}\r\n                   className={active ? 'early-payment__label checked':'early-payment__label'}/>\r\n\r\n            <input id={'early-payment-input-'+props.year} checked = {active} onChange={(e)=>{\r\n                setActive(e.currentTarget.checked);\r\n            }} type='checkbox'/>\r\n            <div className='early-payment__ceil'>\r\n                {props.ceil + ' рублей'}\r\n                <span className='early-payment__year'> {getYearText(props.year)}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EarlyPayment;","import React from 'react';\r\nimport EarlyPayment from './EarlyPayment/EarlyPayment';\r\n\r\n\r\nfunction EarlyPayments(props) {\r\n    const earlyPayments = props.earlyPayments;\r\n\r\n    return (\r\n        earlyPayments.length !==0 &&\r\n        <div className='tax-deduction__content-early-payment early-payment'>\r\n            <div className='early-payment__title'>Итого можете внести в качестве досрочных:</div>\r\n            {earlyPayments.map((value, index)=>{\r\n                return <EarlyPayment key={index}\r\n                                          year={index+1}\r\n                                          ceil={earlyPayments[index]}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EarlyPayments;","import React, {useRef, useState} from 'react';\r\nimport EarlyPayments from './EarlyPayment/EarlyPayments';\r\nimport './TaxDeductionContent.scss';\r\n\r\nfunction TaxDeductionContent(props) {\r\n    //максимальная сумма вычета\r\n    const maxDeductionAmount = props.maxDeductionAmount;\r\n    //заполнили ли поле с зп\r\n    let [withError, setError] = useState(false);\r\n    // массив выплат в год\r\n    let [earlyPayments, setEarlyPayments] = useState([]);\r\n    //Input с зп\r\n    let [salary, setSalary] = useState('');\r\n\r\n    //скрытый блок, для вычисления позиции символа рубля\r\n    const hiddenBlockRef = useRef(null);\r\n    //блок со знаком валюты\r\n    const currencySign = useRef(null);\r\n    //блок с инпутом. Нужен для вычисления конечной позиции символа\r\n    const salaryInput = useRef(null);\r\n\r\n    function changeSalaryInputHandler(e){\r\n        let value = e.currentTarget.value;\r\n        validate();\r\n        setSalary(value);\r\n\r\n        if(value===''){\r\n            currencySign.current.style.display='none';\r\n        }else {\r\n            currencySign.current.style.display='flex';\r\n\r\n        }\r\n        //сдвигаем символ рубля\r\n        // получаем ширину скрытого поля\r\n        let hiddenElem = hiddenBlockRef.current;\r\n        hiddenElem.innerHTML=value;\r\n        let hiddenBlockWidth =  hiddenElem.getBoundingClientRect().width;\r\n\r\n        //задаем позицию символу рубля\r\n        let leftPosition = hiddenBlockWidth - 4;\r\n        let salaryInputWidth = salaryInput.current.getBoundingClientRect().width;\r\n\r\n        // если символ валюты находится за пределами инпута\r\n        if(salaryInputWidth<leftPosition+10){\r\n            leftPosition = salaryInputWidth-10;\r\n        }\r\n        currencySign.current.style.left=leftPosition+'px';\r\n\r\n        function validate() {\r\n            //убираем все НЕ цифры\r\n            value = value.replace(/\\D/gi, '');\r\n            //добавляем пробелы\r\n            let mas = value.split('').reverse();\r\n            mas=mas.map((elem, index)=>{\r\n                if(index%3===0 && index!==0) return elem+' ';\r\n                else return elem;\r\n            })\r\n            value = mas.reverse().join('');\r\n        }\r\n    }\r\n\r\n    function clickPaymentsBtnHandler(e) {\r\n        //убираем пробелы\r\n        let salaryInt = salary.replace(' ', '');\r\n        //если пустая строка - выводим ошибку\r\n        //если введена слишком маленькая сумма - тоже ошибка\r\n        if(salaryInt==='' || salaryInt<1000){\r\n            setError(true);\r\n            setEarlyPayments([]);\r\n            return;\r\n        }\r\n        else setError(false);\r\n\r\n        //записываем максимальную сумму выплат, в переменную, которую можем изменять\r\n        let maxDeductionAmountTemp = maxDeductionAmount;\r\n        //максимальная зарпалата в месяц\r\n        let maxInYear = (salaryInt*12*0.13);\r\n\r\n        //массив выплат в год\r\n        let payments=[];\r\n        while(maxDeductionAmountTemp>maxInYear){\r\n            payments.push(Math.round(maxInYear));\r\n            maxDeductionAmountTemp-=maxInYear;\r\n        }\r\n\r\n        payments.push(Math.round(maxDeductionAmountTemp));\r\n\r\n        setEarlyPayments(payments);\r\n    }\r\n\r\n    return (\r\n        <div className='tax-deduction__content'>\r\n            <div onClick={()=>props.closePopup()} className='tax-deduction__close-btn'/>\r\n            <div className='tax-deduction__content-title'>Налоговый вычет</div>\r\n            <div className='tax-deduction__content-clue'>\r\n                Используйте налоговый вычет чтобы погасить ипотеку досрочно. Размер налогового вычета составляет не более 13% от своего  официального годового дохода.\r\n            </div>\r\n            <div className='tax-deduction__content-salary'>\r\n                <div className='tax-deduction__content-salary-text'>Ваша зарплата в месяц</div>\r\n                <div className={withError? 'tax-deduction__content-salary-input error': 'tax-deduction__content-salary-input'}>\r\n                    <div ref = {currencySign} className='tax-deduction__content-currency-sign'>₽</div>\r\n                    <input ref={salaryInput}\r\n                           type='text'\r\n                           onChange={changeSalaryInputHandler}\r\n                           value={salary}\r\n                           placeholder='Введите данные'\r\n                    />\r\n                    {withError && <div className='tax-deduction__content-salary-error'>Поле обязательно для заполнения</div>}\r\n                    <div ref={hiddenBlockRef} className='tax-deduction__content-salary-input-hidden-block'>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    onClick={clickPaymentsBtnHandler}\r\n                    className='tax-deduction__content-salary-button'>Рассчитать</div>\r\n            </div>\r\n\r\n            <EarlyPayments earlyPayments={earlyPayments}/>\r\n\r\n            <div className='tax-deduction__what-reduction what-reduction'>\r\n                <div className='what-reduction-text'>Что уменьшаем?</div>\r\n                <div className='what-reduction-buttons'>\r\n                    <div className='what-reduction-button red-btn'>Платёж</div>\r\n                    <div className='what-reduction-button gray-btn'>Срок</div>\r\n                </div>\r\n            </div>\r\n            <div className='tax-deduction__add-btn'>\r\n                <div>Добавить</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaxDeductionContent;","import React from 'react';\r\nimport TaxDeductionContent from './TaxDeductionContent/TaxDeductionContent';\r\n\r\nimport './TaxDeductionPopup.scss';\r\n\r\n\r\n\r\nfunction TaxDeductionPopup(props) {\r\n\r\n    const isOpen= props.isOpen;\r\n    const closePopup = props.closePopup;\r\n    //Цена квартиры передается в пропсах снаружи\r\n    const apartmentPrice = props.apartmentPrice;\r\n    //максимальная сумма вычета\r\n    let maxDeductionAmount;\r\n\r\n    //если цена квартиры больше 2 миллионов, максимальная сумма вычета - 260 т.р.\r\n    if(apartmentPrice>2000000) maxDeductionAmount=260000;\r\n    else maxDeductionAmount = (apartmentPrice/100*13).toFixed(2);\r\n\r\n    return (\r\n        <div className={isOpen?  'tax-deduction ' : 'tax-deduction closed' }>\r\n                <TaxDeductionContent closePopup={closePopup}\r\n                                isOpenPopup={isOpen}\r\n                                maxDeductionAmount={maxDeductionAmount}\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaxDeductionPopup;\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\nimport TaxDeductionPopup from './MyPopup/TaxDeductionPopup';\nimport './App.scss';\n\n\nfunction App() {\n    let [isOpenPopup, setOpenPopup] = useState(false);\n\n    function openCloseButtonHandler() {\n        setOpenPopup(!isOpenPopup);\n    }\n    return (\n        <div className=\"App\">\n            <button onClick={openCloseButtonHandler} className='tax-deduction__button' >Налоговый вычет</button>\n            <TaxDeductionPopup apartmentPrice={2000000}\n                     isOpen={isOpenPopup}\n                     closePopup={()=>setOpenPopup(false)}\n            />\n\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}